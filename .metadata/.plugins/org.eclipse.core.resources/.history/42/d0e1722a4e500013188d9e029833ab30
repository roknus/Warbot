package edu.turtlekit2.warbot.roknus;

import java.util.ArrayList;
import java.util.List;

import edu.turtlekit2.warbot.WarBrain;
import edu.turtlekit2.warbot.message.WarMessage;

public class BrainBase extends WarBrain{
	
    ArrayList<dataExplorerRocket> explorer;
    ArrayList<dataExplorerRocket> rocket;
    private double distanceBaseEnemy;
	private double angleBaseEnemy;

	public BrainBase()
	{
		explorer = new ArrayList<dataExplorerRocket>();
		rocket = new ArrayList<dataExplorerRocket>();
		this.angleBaseEnemy = 0;
		this.distanceBaseEnemy = 0;
	}

	@Override
	public String action() {
		
		if(!emptyBag()){
			return "eat";
		}
		

		List<WarMessage> liste = getMessage();
		
		for(WarMessage m : liste)
		{
			if(m.getMessage().equals("EnemyBase"))
			{
				this.setAngleBaseEnemy(m.getAngle() + Double.parseDouble(m.getContent()[0]));
				this.setDistanceBaseEnemy(Double.parseDouble(m.getContent()[1]));
				this.setHeading(this.getAngleBaseEnemy());
				
		        for(dataExplorerRocket r : rocket)
		        {
		                String content[] = new String[1];
//		                content[0] = computeAngle(r);
		                content[0] = Double.toString(this.getHeading());
//		                System.out.println(this.getHeading());
		                sendMessage(r.getId(),"EnemyBase",content);
		        }
				
			}	
			else if(m.getMessage().equals("MyPosition"))
			{
				boolean test = true;
				if(m.getType().equals("WarExplorer"))
				{
					for(dataExplorerRocket d : explorer)
					{
						if(m.getSender() == d.getId())
						{
							d.setAngle(m.getAngle());
							test = false;
						}
					}
					if(test)
					{
						explorer.add(new dataExplorerRocket(m.getSender(),m.getAngle(),m.getDistance()));
					}
				}
				else if(m.getType().equals("WarRocketLauncher"))
				{
					for(dataExplorerRocket d : rocket)
					{
						if(m.getSender() == d.getId())
						{
							d.setAngle(m.getAngle());
							test = false;
						}
					}
					if(test)
					{
						rocket.add(new dataExplorerRocket(m.getSender(),m.getAngle(),m.getDistance()));
					}
				}
			}
				
		}
		
		broadcastMessage("WarExplorer", "WarBasePosition", null);
		broadcastMessage("WarRocketLauncher", "WarBasePosition", null);
		
		if(getEnergy() > 12000){
			setNextAgentCreate("Explorer");
			return "create";
		}
		
		return "action";
	}
	
    public String computeAngle(dataExplorerRocket r) {
        double distanceREnemyPow = Math.pow(r.getDistance(),2) + Math.pow(distanceBaseEnemy,2) - ( 2 * r.getDistance() * distanceBaseEnemy * Math.cos(Math.toRadians(r.getAngle())) );
        double distanceREnemy = Math.sqrt(distanceREnemyPow);
        

		double D = Math.toDegrees(Math.acos((Math.pow(this.getDistanceBaseEnemy(),2) + Math.pow(r.getDistance(),2) - distanceREnemyPow)/(2 * this.getDistanceBaseEnemy() * r.getDistance())));
        return Double.toString(D);
    }

	public double getAngleBaseEnemy() {
		return angleBaseEnemy;
	}

	public void setAngleBaseEnemy(double baseEnemy) {
		this.angleBaseEnemy = baseEnemy;
	}	
	public double getDistanceBaseEnemy() {
		return distanceBaseEnemy;
	}

	public void setDistanceBaseEnemy(double distanceBaseEnemy) {
		this.distanceBaseEnemy = distanceBaseEnemy;
	}
}
